apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "trino.fullname" . }}-worker
spec:
  serviceName: trino-worker
  replicas: {{ .Values.workerReplicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ .Values.trino.worker }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ .Values.trino.worker }}
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.registry }}/{{ .Values.image.imagename }}:{{ .Values.image.tag }}
        ports:
          - containerPort: 8080
        volumeMounts:
        - name: trino-cfg-vol
          mountPath: /etc/trino/jvm.config
          subPath: jvm.config
        - name: trino-cfg-vol
          mountPath: /etc/trino/config.properties
          subPath: config.properties.worker
        - name: trino-cfg-vol
          mountPath: /etc/trino/node.properties
          subPath: node.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/hive.properties
          subPath: hive.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/iceberg.properties
          subPath: iceberg.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/mysql.properties
          subPath: mysql.properties
        - name: trino-tmp-data
          mountPath: /tmp
        resources:
          requests:
            memory: {{ .Values.workerResources.memory}}
            cpu: {{ .Values.workerResources.cpu}}
        imagePullPolicy: Always
      volumes:
        - name: trino-cfg-vol
          configMap:
            name: trino-configs
  volumeClaimTemplates:
  - metadata:
      name: trino-tmp-data
    spec:
      storageClassName: {{ .Values.storageClassName}}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
